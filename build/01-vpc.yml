Description: VPC architecture config for countertstrike

# Default parameters can be overridden by command line execution
Parameters:
  AvailabilityZones:
    Description:
      "List of Azs"
    Type: CommaDelimitedList
    Default: eu-west-1a
  VpcCidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Description: "CIDR block for the VPC"
    Type: String
    Default: "172.16.99.0/28" # 16 addresses should be more than enough
  PubASubnetCidr:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    Description: "CIDR block for our subnet"
    Type: String
    Default: "172.16.99.0/30" # 4 addresses

Resources:
  # Setup vpc
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      InstanceTenancy: default
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: "cs-vpc"

  # public subnet AZ-a
  SubnetPubA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !Ref AvailabilityZones]
      CidrBlock: !Ref PubASubnetCidr
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: "cs-public-a"
        - Key: SubnetType
          Value: Public
        - Key: Tier
          Value: Public

  # creates IGW
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: "cs-igw"

  # Attaches IGW to vpc
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: "cs-public-rt"
        - Key: Network
          Value: Public
      VpcId: !Ref VPC

  # Public Route table to InternetGateway in each AZ
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

Outputs:
  VPC:
    Description: VPC ID
    Export:
      Name: "cs-vpc"
    Value: !Ref VPC

  PubAsubnet:
    Description: SubnetPubA ID
    Value: SubnetPubA
    Export:
      Name: "cs-public-a"
